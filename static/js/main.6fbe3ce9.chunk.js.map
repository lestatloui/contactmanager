{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","data","console","log","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","finish","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound","Test","title","body","userId","fetch","then","json","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6fbe3ce9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [\r\n      /*{\r\n        id: 1,\r\n        name: 'John Doe',\r\n        email: 'jdoe@gmail.com',\r\n        phone: '555-555-5555'\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'Karen Williams',\r\n        email: 'kwilliams@gmail.com',\r\n        phone: '222-222-2222'\r\n      },\r\n      {\r\n        id: 3,\r\n        name: 'Henry Johnson',\r\n        email: 'hjohnson@gmail.com',\r\n        phone: '111-111-111'\r\n      }*/\r\n    ],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  /*componentDidMount() {\r\n    axios.get('https://jsonplaceholder.typicode.com/users').then(response =>\r\n      this.setState({\r\n        contacts: response.data\r\n      })\r\n    );\r\n  }*/\r\n\r\n  async componentDidMount() {\r\n    const response = await axios.get(\r\n      'https://jsonplaceholder.typicode.com/users'\r\n    );\r\n    this.setState({ contacts: response.data });\r\n    console.log('componentDidMount...');\r\n  }\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n  // static propTypes = {\r\n  //   name: PropTypes.string.isRequired,\r\n  //   email: PropTypes.string.isRequired,\r\n  //   phone: PropTypes.string.isRequired\r\n  // };\r\n\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  // onDeleteClick = (id, dispatch) => {\r\n  //   axios\r\n  //     .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n  //     .then(response => dispatch({ type: 'DELETE_CONTACT', payload: id }));\r\n  // };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      /*let response =*/\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    } catch (e) {\r\n    } finally {\r\n      /*response =*/ dispatch({\r\n        type: 'DELETE_CONTACT',\r\n        payload: id\r\n      });\r\n      console.log(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name} {'  '}\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: 'pointer' }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      float: 'right',\r\n                      color: 'black',\r\n                      marginRight: '1rem'\r\n                    }}\r\n                  />\r\n                </Link>{' '}\r\n              </h4>\r\n\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\"> Email: {email} </li>\r\n                  <li className=\"list-group-item\"> Phone: {phone} </li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\n// Contact.propTypes = {\r\n//   name: PropTypes.string.isRequired,\r\n//   email: PropTypes.string.isRequired,\r\n//   phone: PropTypes.string.isRequired\r\n// };\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  //console.log({ error });\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n//import uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name.length === 0) {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n\r\n    if (email.length === 0) {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n    if (phone.length === 0) {\r\n      this.setState({ errors: { phone: 'Phone is required' } });\r\n      return;\r\n    }\r\n    const newContact = {\r\n      //id: uuid(),\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    /*axios\r\n      .post('https://jsonplaceholder.typicode.com/users', newContact)\r\n      .then(response =>\r\n        dispatch({ type: 'ADD_CONTACT', payload: response.data })\r\n      );*/\r\n\r\n    const response = await axios.post(\r\n      'https://jsonplaceholder.typicode.com/users',\r\n      newContact\r\n    );\r\n    dispatch({ type: 'ADD_CONTACT', payload: response.data });\r\n\r\n    //dispatch({ type: 'ADD_CONTACT', payload: newContact });\r\n\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n\r\n    console.log(this.state);\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div>\r\n              <div className=\"card mb-3\">\r\n                <div className=\"card-header\">Add Contact</div>\r\n                <div className=\"card-body\">\r\n                  <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                    <TextInputGroup\r\n                      label=\"Name\"\r\n                      name=\"name\"\r\n                      placeholder=\"Enter Name...\"\r\n                      value={name}\r\n                      onChange={this.onChange}\r\n                      error={errors.name}\r\n                    />\r\n                    <TextInputGroup\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      type=\"email\"\r\n                      placeholder=\"Enter Email...\"\r\n                      value={email}\r\n                      onChange={this.onChange}\r\n                      error={errors.email}\r\n                    />\r\n                    <TextInputGroup\r\n                      label=\"Phone\"\r\n                      name=\"phone\"\r\n                      placeholder=\"Enter Phone...\"\r\n                      value={phone}\r\n                      onChange={this.onChange}\r\n                      error={errors.phone}\r\n                    />\r\n                    <input\r\n                      type=\"submit\"\r\n                      value=\"Add Contact\"\r\n                      className=\"btn btn-light btn-block\"\r\n                    />\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    try {\r\n      const response = await axios.get(\r\n        `https://jsonplaceholder.typicode.com/users/${id}`\r\n      );\r\n\r\n      const contact = response.data;\r\n      this.setState({\r\n        name: contact.name,\r\n        email: contact.email,\r\n        phone: contact.phone\r\n      });\r\n    } catch (e) {\r\n      console.log(`No contact data for ${id}`);\r\n    }\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name.length === 0) {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n\r\n    if (email.length === 0) {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n    if (phone.length === 0) {\r\n      this.setState({ errors: { phone: 'Phone is required' } });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n    const { id } = this.props.match.params;\r\n    const response = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n    dispatch({ type: 'UPDATE_CONTACT', payload: response.data });\r\n\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n\r\n    console.log(this.state);\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div>\r\n              <div className=\"card mb-3\">\r\n                <div className=\"card-header\">Edit Contact</div>\r\n                <div className=\"card-body\">\r\n                  <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                    <TextInputGroup\r\n                      label=\"Name\"\r\n                      name=\"name\"\r\n                      placeholder=\"Enter Name...\"\r\n                      value={name}\r\n                      onChange={this.onChange}\r\n                      error={errors.name}\r\n                    />\r\n                    <TextInputGroup\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      type=\"email\"\r\n                      placeholder=\"Enter Email...\"\r\n                      value={email}\r\n                      onChange={this.onChange}\r\n                      error={errors.email}\r\n                    />\r\n                    <TextInputGroup\r\n                      label=\"Phone\"\r\n                      name=\"phone\"\r\n                      placeholder=\"Enter Phone...\"\r\n                      value={phone}\r\n                      onChange={this.onChange}\r\n                      error={errors.phone}\r\n                    />\r\n                    <input\r\n                      type=\"submit\"\r\n                      value=\"Edit Contact\"\r\n                      className=\"btn btn-light btn-block\"\r\n                    />\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\">Home</i>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\">Add</i>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas-fa-question\">About</i>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\n// const headingStyle = {\r\n//   color: 'green',\r\n//   fontSize: '50 px'\r\n// };\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nexport default props => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n//export default About;\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: '',\r\n    body: '',\r\n    userId: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          title: data.title,\r\n          body: data.body,\r\n          userId: data.userId\r\n        })\r\n      );\r\n  }\r\n\r\n  /* componentWillMount() {\r\n    console.log('componentWillMount...');\r\n  }*/\r\n\r\n  // componentUpdateMount() {\r\n  //   console.log('componentUpdateMount...');\r\n  // }\r\n\r\n  /*componentWillReceiveProps() {\r\n    console.log('componentWillReceiveProps...');\r\n  }*/\r\n\r\n  // static getDerivedStateFromProps(nextProps, prevState) {\r\n  //   console.log('getDerivedStateFromProps...');\r\n  //   return {\r\n  //     test: 'something'\r\n  //   };\r\n  // }\r\n\r\n  // getSnapshotBeforeUpdate(prevProps, prevState) {\r\n  //   console.log('getSnapshotBeforeUpdate...');\r\n  // }\r\n\r\n  // componentDidUpdate() {\r\n  //   console.log('componentDidUpdate...');\r\n  // }\r\n\r\n  render() {\r\n    const { title, body, userId } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n        <p>{userId}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from 'react';\n//import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}